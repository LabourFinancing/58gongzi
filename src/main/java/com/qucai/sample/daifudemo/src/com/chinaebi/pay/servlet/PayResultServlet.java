package com.qucai.sample.daifudemo.src.com.chinaebi.pay.servlet;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Map;
import java.util.TreeMap;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.qucai.sample.daifudemo.src.com.chinaebi.pay.request.Common;
import com.qucai.sample.daifudemo.src.com.chinaebi.pay.security.RSASignUtil;
//声明：以下代码只是为了方便商户测试而提供的样例代码，商户可以根据自己需要，按照技术文档编写。该代码仅供参考，不提供编码，性能，规范性等方面的保障
public class PayResultServlet extends HttpServlet {

	private static final long serialVersionUID = -4883919288976369044L;

	public PayResultServlet() {
		super();
	}

	public void destroy() {
		super.destroy();
	}

	public void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		request.setCharacterEncoding("utf-8");

		String charset = request.getParameter("charset"); // 字符集
		String version = request.getParameter("version"); // 消息版本号
		String signType = request.getParameter("signType"); // 签名类型
		String backParam = request.getParameter("backParam"); // 签名类型
		String serverCert = request.getParameter("serverCert"); // 公钥证书
		String serverSign = request.getParameter("serverSign"); // 签名
		String orderId = request.getParameter("orderId"); // 订单号
		String tradeNo = request.getParameter("tradeNo"); // 支付流水号
		String merchantId = request.getParameter("merchantId"); // 商户号
		String transAmt = request.getParameter("transAmt"); // 交易金额
		String transState = request.getParameter("transState"); // 交易状态
		String payTime = request.getParameter("payTime"); // 支付完成时间
		String settleDate = request.getParameter("settleDate"); // 清算日期
		String userName = request.getParameter("userName"); // 用户名称
		String cardNo = request.getParameter("cardNo"); // 用户名称
		String cardType = request.getParameter("cardType"); // 卡类型
		String feePayer = request.getParameter("feePayer"); // 手续费收款
		String bankCode = request.getParameter("bankCode"); // 银行卡简称
		
//		String certId = request.getParameter("certId"); // 证书序列号
//		String extendInfo = request.getParameter("extendInfo"); // 扩展信息

		Map<String, Object> dataMap = new TreeMap<String, Object>();
//		dataMap.put("charset", charset);
//		dataMap.put("version", version);
//		dataMap.put("backParam", backParam);
//		dataMap.put("signType", signType);
//		dataMap.put("serverCert", serverCert);
//		dataMap.put("serverSign", serverSign);
//		dataMap.put("orderId", orderId);
//		dataMap.put("tradeNo", tradeNo);
//		dataMap.put("merchantId", merchantId);
//		dataMap.put("transAmt", transAmt);
//		dataMap.put("transState", transState);
//		dataMap.put("payTime", payTime);
//		dataMap.put("settleDate", settleDate);
//		dataMap.put("userName", userName);
//		dataMap.put("cardNo", cardNo);
//		dataMap.put("cardType", cardType);
//		dataMap.put("feePayer", feePayer);
//		dataMap.put("bankCode", bankCode);
//		dataMap.put("charset", "00");
//		dataMap.put("version", "1.1");
//		dataMap.put("signType", "RSA");
//		dataMap.put("serverCert
//		dataMap.put("serverSign", "A5301042F4A06F42A3A6F8EAA61888134000D24E099915813E58F7DB24C098A6E4462E90FEE5DA1A98C60BDA558E414533E073879D6F7B7DFD8A53B9C1A23403A154CEB7F43282C813BEAF63C4080BF3D753CB15750C35DE65B05501B1536EB1F7D1EFB38D7D6A56BCAE08592D25C3B043F19BE53A8BE283FE9BB8A117AF8EFD0B127EE31B0A072695A1260088FC0D56FD98077EB0F3CCA97BB368A37A02A4C40ECBA56A3DA383E1A8AB9A5622A89445EA80ED0C34C3FC6F909F81677BEA5CC1F56BD1AE8285C7F86FD5DAAA8ED1DE953E02E7927AB82B9A518E469E62ECC4B2A453B563A98F91EA06605B0BC1ABC182FA51F966845AEEC902EEA5B83F81FB60");
//		dataMap.put("orderId", "1007254923100056731648");
//		dataMap.put("refundId", "2001254927783055867904");
//		dataMap.put("tradeNo", "202004250040948137");
//		dataMap.put("merchantId", "872290449005001");
//		dataMap.put("transAmt", "100.00");
//		dataMap.put("refundDate", "20200515");
//		dataMap.put("transState", "S");
//		dataMap.put("payCapTyp", "40");
	
//		dataMap.put("certId", certId);
//		
//		dataMap.put("extendInfo", extendInfo);
//        String serverSign = dataMap.get("serverSign").toString();
//        String serverCert = dataMap.get("serverCert").toString();
		String merchantCertPath = Common.getMerchantCertPath();
		String merchantCertPass = Common.getMerchantCertPwd();
		RSASignUtil util = new RSASignUtil(merchantCertPath, merchantCertPass);
		String oridata = util.coverMap2String(dataMap);
		System.out.println("oridata	----> " + oridata);
		System.out.println("serverSign	----> " + serverSign);
		//Boolean verifyResult = util.verifyByTestCert(oridata, serverSign, Common.CHAR_SET_GBK);
		Boolean verifyResult = util.verify(oridata, serverSign,serverCert, Common.CHAR_SET_GBK);
		System.out.println("verifyResult	----> " + verifyResult);
		
		String pagePrint = oridata + "<br/>验签结果：" + verifyResult;
		
		response.setHeader("Content-type", "text/html;charset=UTF-8");
        PrintWriter out = response.getWriter();
        System.out.println(out);
		out.print(pagePrint.replaceAll(",", ",<br/>"));
		out.flush();
		out.close();
	}
	public static void main(String[] args) {
		Map<String, Object> dataMap = new TreeMap<String, Object>();
		dataMap.put("charset", "GBK");
		dataMap.put("version", "1.0");
		dataMap.put("signType", "RSA");
		dataMap.put("serverCert
		dataMap.put("serverSign", "2348CFFD39C82DB57613FA16D9CB31B4500120990AEFD9C40B1EB2AD7900B9703863908002FF20EE9B0CC03D3C506425EDA13F0FD4B2818DDA901D4A14AA259E973CAD8C2A36D7667A1B31E45551544672402DF2D91A547B80B8A3E660639FD119AC92DC9B1D113073B7B87A370975939F36A1EDAC67F778DF6876A8669BF2739ADE81B74CF644930A70D84A1432470A61A2E3E36093562925A82B8F7AF014EE29EF40CB462A9C11D7E8458461E4BD9456657259D737B1EB470FC4661DC34B8447DD963642AC26BD8A6B081BF043B11EEC3BA37ABB1F021347F50BE3865660A0E01E519B01B83E40331FCC7631EB4EEAA500A0F1722230C17F705145C227939E");
		dataMap.put("orderId", "3456791203");
		dataMap.put("tradeNo", "202003120045206787");
		dataMap.put("merchantId", "872290451115001");
		dataMap.put("transAmt", "2");
		dataMap.put("transState", "S");
		dataMap.put("payTime", "20200709185144");
		dataMap.put("settleDate", "20200312");
		dataMap.put("userName", "全渠道");
		dataMap.put("cardNo", "b551303133a6a573b48f527d2e57e2c4b63c5919375b7b9c");
		dataMap.put("cardType", "0");
		dataMap.put("feePayer", "01");
		dataMap.put("bankCode", "PABC");
//		dataMap.put("charset", "00");
//		dataMap.put("version", "1.1");
//		dataMap.put("signType", "RSA");
//		dataMap.put("serverCert", "308204F2308203DAA00302010202054112155419300D06092A864886F70D01010B05003058310B300906035504061302434E3130302E060355040A0C274368696E612046696E616E6369616C2043657274696669636174696F6E20417574686F726974793117301506035504030C0E4346434120414353204F43413331301E170D3138303532333038333831355A170D3231303532333038333831355A3081A0310B300906035504061302434E31173015060355040A0C0E4346434120414353204F4341333131133011060355040B0C0A43464341204F4341333131193017060355040B0C104F7267616E697A6174696F6E616C2D313148304606035504030C3F4346434140E4B88AE6B5B7E794B5E993B6E4BFA1E681AFE68A80E69CAFE69C89E99990E585ACE58FB8404E393133313030303035373037363637363130403430820122300D06092A864886F70D01010105000382010F003082010A0282010100C866633C25EC315BBEECE573EC4D2F27F247B757F1EEAFE63F54907109CB1AF42CBAF9AAE70E5BCF0782ABB20B963A35AADD1C00A27A3EF65D5D4F7C6FA7306829C6CB82B2F621403AC8DD3DFBCC5BE8B4E8D7AEFC855D39F7FE378A004E8D7C303B1D2AC96167C367170B707C463A715469695710397E1FE5BA9E5B66F1803F740602706F0B2EA1F79C8D02B2C2F7679C5F159E37C3446B3C71859E67C1B28515B51BF33DBCBB7CD45DFD0C9433AB3C0128C0A0AA7678787E15B7A32E91F325E19AD227CC6CB38F851064E93B7A596C605D90466AE7421C6FAF603B4401B665505FC7F90CE6512A6151DBF9BB3D7186DE5454160160376B01ADC53B0575468F0203010001A382017830820174306C06082B060105050701010460305E302806082B06010505073001861C687474703A2F2F6F6373702E636663612E636F6D2E636E2F6F637370303206082B060105050730028626687474703A2F2F63726C2E636663612E636F6D2E636E2F6F636133312F6F636133312E636572301F0603551D23041830168014E2B409CBCD61A1734A797FF18A830BDDB47E8C1D300C0603551D130101FF0402300030480603551D200441303F303D060860811C86EF2A01043031302F06082B060105050702011623687474703A2F2F7777772E636663612E636F6D2E636E2F75732F75732D31342E68746D303D0603551D1F043630343032A030A02E862C687474703A2F2F63726C2E636663612E636F6D2E636E2F6F636133312F5253412F63726C313133362E63726C300E0603551D0F0101FF0404030206C0301D0603551D0E04160414CDED6F00FD56A7E6EF28BAACFBEE31099A6AD262301D0603551D250416301406082B0601050507030206082B06010505070304300D06092A864886F70D01010B05000382010100CB7BDA33BF68428302212EC5A824E70B7A2146D39056243EAEC82F5AA934ECC0B9E2A65037AD729077F12995B6F38A55865C191B2909FBDADC6120C100EE49843B1A6851C010FC7C8B0EA4FF4173C70C4E30C2C6D8A86B5FD1E1A171771FD89E216C8E5FD458CF7202F1F954D69C9A42DCA706FCD6B80D7EFB88798A0D45DB791D4FB370F959368A04875A1CB21720970714E94F7FA477D388C6FEABC1B7AACD5264ACAEA7E1B99427EA891944A81B97E561FEE4E411008E6920FAAFF0CBB1FE2851B9B34304472E7B09CE097421700608E1D5629CE2D43AFE6A120EBC5177B23C014634D2F92F95F194B8E4F3C96AF6078EE7571A30834AE2B096111E0EAB17");
//		dataMap.put("serverSign", "A5301042F4A06F42A3A6F8EAA61888134000D24E099915813E58F7DB24C098A6E4462E90FEE5DA1A98C60BDA558E414533E073879D6F7B7DFD8A53B9C1A23403A154CEB7F43282C813BEAF63C4080BF3D753CB15750C35DE65B05501B1536EB1F7D1EFB38D7D6A56BCAE08592D25C3B043F19BE53A8BE283FE9BB8A117AF8EFD0B127EE31B0A072695A1260088FC0D56FD98077EB0F3CCA97BB368A37A02A4C40ECBA56A3DA383E1A8AB9A5622A89445EA80ED0C34C3FC6F909F81677BEA5CC1F56BD1AE8285C7F86FD5DAAA8ED1DE953E02E7927AB82B9A518E469E62ECC4B2A453B563A98F91EA06605B0BC1ABC182FA51F966845AEEC902EEA5B83F81FB60");
//		dataMap.put("orderId", "1007254923100056731648");
//		dataMap.put("refundId", "2001254927783055867904");
//		dataMap.put("tradeNo", "202004250040948137");
//		dataMap.put("merchantId", "872290449005001");
//		dataMap.put("transAmt", "100.00");
//		dataMap.put("refundDate", "20200515");
//		dataMap.put("transState", "S");
//		dataMap.put("payCapTyp", "40");
	
//		dataMap.put("certId", certId);
//		
//		dataMap.put("extendInfo", extendInfo);
        String serverSign = dataMap.get("serverSign").toString();
        String serverCert = dataMap.get("serverCert").toString();
		String merchantCertPath = Common.getMerchantCertPath();
		String merchantCertPass = Common.getMerchantCertPwd();
		RSASignUtil util = new RSASignUtil(merchantCertPath, merchantCertPass);
		String oridata = util.coverMap2String(dataMap);
		System.out.println("oridata	----> " + oridata);
		System.out.println("serverSign	----> " + serverSign);
		//Boolean verifyResult = util.verifyByTestCert(oridata, serverSign, Common.CHAR_SET_GBK);
		Boolean verifyResult = util.verify(oridata, serverSign,serverCert, Common.CHAR_SET_GBK);
		System.out.println("verifyResult	----> " + verifyResult);
		
		
	}
}
