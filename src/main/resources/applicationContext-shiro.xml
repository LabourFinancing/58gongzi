<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
	default-lazy-init="true">

	<description>Shiro安全配置（组装bean）</description>
	<!-- Session Manage begin-->

	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">  
        <property name="globalSessionTimeout" value="900000"/>  
        <property name="deleteInvalidSessions" value="true"/>  
        <property name="sessionDAO" ref="sessionDAO"/>  
        <property name="sessionIdCookieEnabled" value="true"/>  
        <property name="sessionIdCookie" ref="sessionIdCookie"/>  
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="cacheManager" ref="shiroEhcacheManager"/>
	</bean>  

    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">  
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>  
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
    </bean> 

	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">  
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml" />  
	</bean>
	  
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
	        <constructor-arg value="sid"/>
	        <property name="httpOnly" value="true"/>
	        <property name="maxAge" value="-1"/> 
	</bean>

 	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"></bean>
	<bean id="kickoutSessionControlFilter"  class="com.qucai.sample.security.KickoutSessionControlFilter">  
	    <property name="sessionManager" ref="sessionManager"/>  
	    <property name="cacheManager" ref="shiroEhcacheManager"/>
	    <property name="kickoutAfter" value="false"/>  
	    <property name="maxSession" value="1"/>  
	    <property name="kickoutUrl" value="/login?kickout=1"/> 
	</bean>
	
    <bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/login" />
    </bean> 
 	<!-- Session Manage End -->
 	
 	
          <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler ">
        <property name="interval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>


	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>

	<!-- 登录及权限验证 -->
	<bean id="realm" class="com.qucai.sample.security.ShiroRealm" />

	<!-- remenberMe配置 
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" /
		<property name="maxAge" value="604800" />
	</bean>
-->
	<!-- rememberMe管理器 
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cipherKey"
			value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
-->
	<!-- 超时拦截器 -->
	<bean id="captchaFormAuthenticationFilter" class="com.qucai.sample.security.CaptchaFormAuthenticationFilter" />

	<!-- Shiro安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="realm" />
		<property name="cacheManager" ref="shiroEhcacheManager" />
		<property name="sessionManager" ref="sessionManager"/>
	</bean>
    <!-- property name="rememberMeManager" ref="rememberMeManager" -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"></property>
		<!-- 要求登录时的链接(登录页面地址)，非必须的属性，默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
		 <property name="loginUrl" value="/index"></property> 
		<!-- 登录成功后要跳转的连接(本例中此属性用不到，因为登录成功后的处理逻辑在LoginController里硬编码) -->
		<!-- <property name="successUrl" value="/" ></property> -->
		<!-- 用户访问未对其授权的资源时，所显示的连接 -->
		<property name="unauthorizedUrl" value="/unauthorizedUrl"></property>
		<property name="filterChainDefinitions">
			<value>
				/a/** = anon <!-- anon匿名访问 -->
				/images/** = anon
                /about/** = anon
				/metronic/** = anon
				/plugins/** = anon
				/static/** = anon
				/Kaptcha.jpg = anon
				/index = anon
				/browserNotMatch = anon
				/timeout = anon
				/oauthController/login = anon
                /registController/** = anon
                /JqueryValidateController/checkUserName = anon
				/agreement = anon
				/userGuide = anon
                /mainpage = anon
                /register = anon
                /nest/** = anon
				/** = kickout,authc  <!-- authc授权访问 -->
			</value>
		</property>
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="captchaFormAuthenticationFilter" />
				<entry key="kickout" value-ref="kickoutSessionControlFilter" />
			</util:map>
		</property>
	</bean>
</beans>