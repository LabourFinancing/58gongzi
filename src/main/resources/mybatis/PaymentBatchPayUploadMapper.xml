<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qucai.sample.dao.PaymentBatchPayUploadDao">

	<resultMap id="BaseResultMap" type="com.qucai.sample.entity.PaymentBatchPayUpload">
		<result column="batch_payment_batchID" property="batch_payment_batchID" jdbcType="VARCHAR" />
		<result column="batch_payment_paymentbatchid" property="batch_payment_paymentbatchid" jdbcType="VARCHAR" />
		<result column="batch_payment_ewalletcat" property="batch_payment_ewalletcat" jdbcType="VARCHAR" />
		<result column="batch_payment_ProdCat" property="batch_payment_ProdCat" jdbcType="VARCHAR" />
		<result column="batch_payment_PayrollName" property="batch_payment_PayrollName" jdbcType="VARCHAR" />
		<result column="batch_payment_Name" property="batch_payment_Name" jdbcType="VARCHAR" />
		<result column="batch_payment_PID" property="batch_payment_PID" jdbcType="VARCHAR" />
		<result column="batch_payment_company" property="batch_payment_company" jdbcType="VARCHAR" />
		<result column="batch_payment_vendorcompany" property="batch_payment_vendorcompany" jdbcType="VARCHAR" />
		<result column="batch_payment_mobile" property="batch_payment_mobile" jdbcType="VARCHAR" />
		<result column="batch_payment_prevbatchID" property="batch_payment_prevbatchID" jdbcType="VARCHAR" />
		<result column="batch_payment_prodName" property="batch_payment_prodName" jdbcType="VARCHAR" />
		<result column="batch_payment_type" property="batch_payment_type" jdbcType="VARCHAR" />
		<result column="batch_payment_currency" property="batch_payment_currency" jdbcType="VARCHAR" />
		<result column="batch_payment_amt" property="batch_payment_amt" jdbcType="DECIMAL" />
		<result column="batch_payment_personalbalAmt" property="batch_payment_personalbalAmt" jdbcType="DECIMAL" />
		<result column="batch_payment_serviceFee" property="batch_payment_serviceFee" jdbcType="DECIMAL" />
		<result column="batch_payment_prevbalance" property="batch_payment_prevbalance" jdbcType="DECIMAL" />
		<result column="batch_payment_category" property="batch_payment_category" jdbcType="VARCHAR" />
		<result column="batch_paymentClearID" property="batch_paymentClearID" jdbcType="VARCHAR" />
		<result column="batch_paymentOrg" property="batch_paymentOrg" jdbcType="VARCHAR" />
		<result column="batch_payment_remark" property="batch_payment_remark" jdbcType="VARCHAR" />
		<result column="batch_payment_comment" property="batch_payment_comment" jdbcType="VARCHAR" />
		<result column="batch_payment_personalPool" property="batch_payment_personalPool" jdbcType="VARCHAR" />
		<result column="batch_payment_OrgPool" property="batch_payment_OrgPool" jdbcType="VARCHAR" />
		<result column="batch_payment_bankcard" property="batch_payment_bankcard" jdbcType="VARCHAR" />
		<result column="batch_payment_starttime" property="batch_payment_starttime" jdbcType="TIMESTAMP" />
		<result column="batch_payment_endtime" property="batch_payment_endtime" jdbcType="TIMESTAMP" />
		<result column="batch_payment_status" property="batch_payment_status" jdbcType="VARCHAR" />
		<result column="batch_createtime" property="batch_createtime" jdbcType="TIMESTAMP" />
		<result column="batch_creator" property="batch_creator" jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="Base_Column_List">
		a.batch_payment_batchID,
		a.batch_payment_paymentbatchid,
		a.batch_payment_ewalletcat,
		a.batch_payment_ProdCat,
		a.batch_payment_PayrollName,
		a.batch_payment_Name,
		a.batch_payment_PID,
		a.batch_payment_company,
		a.batch_payment_vendorcompany,
		a.batch_payment_mobile,
		a.batch_payment_prevbatchID,
		a.batch_payment_prodName,
		a.batch_payment_type,
		a.batch_payment_currency,
		a.batch_payment_amt,
		a.batch_payment_personalbalAmt,
		a.batch_payment_serviceFee,
		a.batch_payment_prevbalance,
		a.batch_payment_category,
		a.batch_paymentClearID,
		a.batch_paymentOrg,
		a.batch_payment_remark,
		a.batch_payment_comment,
		a.batch_payment_personalPool,
		a.batch_payment_OrgPool,
		a.batch_payment_bankcard,
		a.batch_payment_starttime,
		a.batch_payment_endtime,
		a.batch_payment_status,
		a.batch_createtime,
		a.batch_creator
	</sql>

	<insert id="insertCustomerMachineByBatch"  parameterType="java.util.List">
        insert into t_batch_debitpaymentupload
		<trim prefix="(" suffix=")" suffixOverrides=",">
		batch_payment_batchID,
		batch_payment_paymentbatchid,
		batch_payment_ewalletcat,
		batch_payment_ProdCat,
		batch_payment_PayrollName,
		batch_payment_Name,
		batch_payment_PID,
		batch_payment_company,
		batch_payment_vendorcompany,
		batch_payment_mobile,
		batch_payment_prevbatchID,
		batch_payment_prodName,
		batch_payment_type,
		batch_payment_currency,
		batch_payment_amt,
		batch_payment_personalbalAmt,
		batch_payment_serviceFee,
		batch_payment_prevbalance,
		batch_payment_category,
		batch_paymentClearID,
		batch_paymentOrg,
		batch_payment_remark,
		batch_payment_comment,
		batch_payment_personalPool,
		batch_payment_OrgPool,
		batch_payment_bankcard,
		batch_payment_starttime,
		batch_payment_endtime,
		batch_payment_status,
		batch_createtime,
		batch_creator
		</trim>
		values
		<foreach collection="list" separator="," item="cell">
		(#{cell.batch_payment_batchID,jdbcType=VARCHAR},
		#{cell.batch_payment_paymentbatchid,jdbcType=VARCHAR},
		#{cell.batch_payment_ewalletcat,jdbcType=VARCHAR},
		#{cell.batch_payment_ProdCat,jdbcType=VARCHAR},
		#{cell.batch_payment_PayrollName,jdbcType=VARCHAR},
		#{cell.batch_payment_Name,jdbcType=VARCHAR},
		#{cell.batch_payment_PID,jdbcType=VARCHAR},
		#{cell.batch_payment_company,jdbcType=VARCHAR},
		#{cell.batch_payment_vendorcompany,jdbcType=VARCHAR},
		#{cell.batch_payment_mobile,jdbcType=VARCHAR},
		#{cell.batch_payment_prevbatchID,jdbcType=VARCHAR},
		#{cell.batch_payment_prodName,jdbcType=VARCHAR},
		#{cell.batch_payment_type,jdbcType=VARCHAR},
		#{cell.batch_payment_currency,jdbcType=VARCHAR},
		#{cell.batch_payment_amt,jdbcType=DECIMAL},
		#{cell.batch_payment_personalbalAmt,jdbcType=DECIMAL},
		#{cell.batch_payment_serviceFee,jdbcType=DECIMAL},
		#{cell.batch_payment_prevbalance,jdbcType=DECIMAL},
		#{cell.batch_payment_category,jdbcType=VARCHAR},
		#{cell.batch_paymentClearID,jdbcType=VARCHAR},
		#{cell.batch_paymentOrg,jdbcType=VARCHAR},
		#{cell.batch_payment_remark,jdbcType=VARCHAR},
		#{cell.batch_payment_comment,jdbcType=VARCHAR},
		#{cell.batch_payment_personalPool,jdbcType=VARCHAR},
		#{cell.batch_payment_OrgPool,jdbcType=VARCHAR},
		#{cell.batch_payment_bankcard,jdbcType=VARCHAR},
		#{cell.batch_payment_starttime,jdbcType=TIMESTAMP},
		#{cell.batch_payment_endtime,jdbcType=TIMESTAMP},
		#{cell.batch_payment_status,jdbcType=VARCHAR},
		#{cell.batch_createtime,jdbcType=TIMESTAMP},
		#{cell.batch_creator,jdbcType=VARCHAR})
		</foreach>
	</insert>
	
	<select id="SelectAllBatchList" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from t_batch_debitpaymentupload a
		where a.batch_payment_batchID = #{batch_payment_batchID,jdbcType=VARCHAR}
		order by batch_createtime desc
	</select>

    <select id="SelectAllBatch" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from t_batch_debitpaymentupload a
		GROUP BY a.batch_payment_batchID
		order by batch_createtime desc
	</select>
	
	<select id="SelectCompanyBatch" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from t_batch_debitpaymentupload a
		where 1=1
		<if test="batch_payment_company != 'ALL' and batch_payment_company != null">
		and a.batch_payment_company = #{batch_payment_company,jdbcType=VARCHAR}
		</if>
		<if test="batch_payment_vendorcompany != 'ALL' and batch_payment_vendorcompany != null" >
		and a.batch_payment_vendorcompany = #{batch_payment_vendorcompany,jdbcType=VARCHAR}
		</if>
        GROUP BY a.batch_payment_batchID
		order by batch_createtime desc
	</select>

<!--  delete batch -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from t_batch_debitpaymentupload
		where batch_payment_batchID = #{t_batch_perslUploadStatus_id,jdbcType=VARCHAR}
	</delete>


	<select id="duplicateMobileChkTmanager" resultMap="BaseResultMap">
		 select
		 <include refid="Base_Column_List" />
		 from t_batch_debitpaymentupload a where a.batch_payment_batchID = #{batch_payment_batchID,jdbcType=VARCHAR}
		 and a.batch_payment_mobile not in
		 ( select mobile from t_manager where t_manager.telephone in ( select batch_payment_batchID from t_batch_debitpaymentupload where batch_payment_batchID = #{batch_payment_batchID,jdbcType=VARCHAR}) )
	</select>
	
	<select id="duplicateMobileChkTperson" resultMap="BaseResultMap">
	     select
		 <include refid="Base_Column_List" />
		 from t_batch_debitpaymentupload a where a.batch_payment_batchID = #{batch_payment_batchID,jdbcType=VARCHAR}
		 and a.batch_payment_mobile not in
		 ( select t_P_Mobil from t_personal_info where t_personal_info.t_P_PID in ( select batch_payment_paymentbatchid from t_batch_debitpaymentupload where batch_payment_batchID = #{batch_payment_batchID,jdbcType=VARCHAR}))
	</select>

	<select id="checkDuplicateBatchUploadMobil" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
         FROM t_batch_debitpaymentupload a where a.batch_payment_batchID = #{batch_payment_batchID,jdbcType=VARCHAR}
         GROUP BY a.batch_payment_mobile HAVING COUNT(1) > 1
	</select>
<!-- 
Find the duplicated personal ID number with new upload sheet
SELECT * FROM t_batch_personupload where batch_PB_PID in (SELECT batch_PB_PID FROM (SELECT batch_PB_PID, COUNT(batch_PB_PID) AS ct FROM t_batch_personupload where batch_PB_batchID = "2020120902" GROUP BY batch_PB_PID ) AS nt WHERE nt.ct>1); 查看上传新增人员身份证是否与已存在重复
-->
	<select id="duplicatePIDChk" resultMap="BaseResultMap">
		 select
		 <include refid="Base_Column_List" />
		 from t_batch_debitpaymentupload a where a.batch_payment_batchID = #{batch_payment_batchID,jdbcType=VARCHAR}
		 and a.batch_payment_batchID not in
		 ( select telephone from t_manager where t_manager.mobile in ( select batch_payment_mobile from t_batch_debitpaymentupload where batch_payment_batchID = #{batch_payment_batchID,jdbcType=VARCHAR}) )
	</select>
	
	<select id="checkDuplicateBatchUploadPID" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
         FROM t_batch_debitpaymentupload a where a.batch_payment_batchID = #{batch_payment_batchID,jdbcType=VARCHAR}
         GROUP BY a.batch_payment_batchID HAVING COUNT(1) > 1
	</select>

<!-- 
 Find the duplicated personal ID number with new upload sheet
SELECT * FROM t_batch_personupload where batch_PB_creditCard in (SELECT batch_PB_creditCard FROM (SELECT batch_PB_creditCard, COUNT(batch_PB_creditCard) AS ct FROM t_batch_personupload where batch_PB_batchID = "2020120902" GROUP BY batch_PB_creditCard) AS nt WHERE nt.ct>1) 查看上传新增人员银行卡号是否与已存在重复
-->
	<select id="duplicateDebitCardChk" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_batch_debitpaymentupload a where a.batch_payment_batchID = #{batch_payment_batchID,jdbcType=VARCHAR}
		and a.batch_payment_bankcard in (SELECT batch_payment_bankcard FROM (SELECT batch_payment_bankcard, COUNT(batch_payment_bankcard) AS ct FROM t_batch_debitpaymentupload where batch_payment_batchID = #{batch_payment_batchID,jdbcType=VARCHAR} GROUP BY batch_payment_bankcard) AS nt WHERE nt.ct>1)
	</select>

	<select id="checkDuplicateBatchUploadDebitCard" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
         FROM t_batch_debitpaymentupload a where a.batch_payment_batchID = #{batch_payment_batchID,jdbcType=VARCHAR}
         GROUP BY a.batch_payment_bankcard HAVING COUNT(1) > 1
	</select>
 	
<!-- 
insert new personal info into manager table
insert into t_manager ( select REPLACE(UUID(),"-",""),batch_mobile,substring(MD5(RAND()),1,6),batch_Name,"美团买菜",batch_mobile,batch_PB_PID,"test@test.com","","1",NOW(),NOW() from t_batch_personupload where batch_PB_PID NOT IN (select t_P_PID from t_personal_info a JOIN t_batch_personupload b on a.t_P_PID = b.batch_PB_PID where b.batch_PB_batchID = "2020120902") and batch_PB_batchID = "2020120902");
 -->
	<insert id="insertManagerInfo"  parameterType="java.util.Map">
        insert into t_manager 
        (select REPLACE(UUID(),"-",""),
        batch_payment_mobile,
        substring(MD5(RAND()),1,6),
        batch_payment_Name,
        batch_payment_company,
        batch_payment_mobile,
        batch_payment_PID,
        "test@test.com",
        "",
        "1",
        NOW(),
        NOW() from t_batch_debitpaymentupload
        where batch_payment_PID NOT IN (select t_P_PID from t_personal_info a JOIN t_batch_debitpaymentupload b on a.t_P_PID = b.batch_payment_PID where b.batch_payment_paymentbatchid = #{batch_payment_paymentbatchid,jdbcType=VARCHAR} ) and batch_payment_paymentbatchid = #{batch_payment_paymentbatchid,jdbcType=VARCHAR} )
    </insert>
<!-- 
insert role manager info into tr_manager_role table
insert into tr_manager_role ( select id, "36e49be8d13e4a2081968148176a082c" from t_manager where telephone in (select batch_PB_PID from t_batch_personupload where batch_PB_PID NOT IN (select t_P_PID from t_personal_info a JOIN t_batch_personupload b on a.t_P_PID = b.batch_PB_PID where b.batch_PB_batchID = "2021011901") and batch_PB_batchID = "2021011901"));
 -->    
 	<insert id="insertRoleTrManagerInfoTxn"  parameterType="java.util.Map">
        insert into tr_manager_role 
         ( select id, 
         "36e49be8d13e4a2081968148176a082c" 
         from t_manager 
         where telephone in
         (select batch_payment_PID from t_batch_debitpaymentupload where batch_payment_PID NOT IN (select t_P_PID from t_personal_info a JOIN t_batch_personupload b on a.t_P_PID = b.batch_payment_PID where b.batch_payment_PID = #{batch_payment_PID,jdbcType=VARCHAR}) and batch_payment_PID = #{batch_payment_PID,jdbcType=VARCHAR}));
    </insert>
<!-- 
insert role manager info into tr_manager_role table
insert into tr_manager_role ( select id, "a4ce0bbea6404a4ea4cab9b95ef53fa5" from t_manager where telephone in (select batch_PB_PID from t_batch_personupload where batch_PB_PID NOT IN (select t_P_PID from t_personal_info a JOIN t_batch_personupload b on a.t_P_PID = b.batch_PB_PID where b.batch_PB_batchID = "2021011901") and batch_PB_batchID = "2021011901"));
 -->    
 	<insert id="insertRoleTrManagerInfoTxnview"  parameterType="java.util.Map">
        insert into tr_manager_role 
         ( select id, 
         "a4ce0bbea6404a4ea4cab9b95ef53fa5" 
         from t_manager 
         where telephone in
         (select batch_payment_PID from t_batch_debitpaymentupload where batch_payment_PID NOT IN (select t_P_PID from t_personal_info a JOIN t_batch_debitpaymentupload b on a.t_P_PID = b.batch_PB_PID where b.batch_payment_PID = #{batch_payment_PID,jdbcType=VARCHAR}) and batch_payment_PID = #{batch_payment_PID,jdbcType=VARCHAR}));
    </insert>
    
<!-- 
insert role manager info into tr_manager_role table
insert into t_personal_info (select REPLACE(UUID(),"-",""),batch_Name,"","0",batch_PB_PID,"","",batch_mobile,batch_mobile,"",batch_mobile,"",batch_mobile,"",batch_mobile,"三耀买菜","1",batch_credit,batch_credit,"onjob","vendor","1",batch_creator,"是","美团买菜","",batch_creditcard,batch_credit,batch_credit,"15",batch_credit,"15","15",NOW(),"0","","system",NOW(),"system",NOW() from t_batch_personupload where batch_PB_PID NOT IN (select t_P_PID from t_personal_info a JOIN t_batch_personupload b on a.t_P_PID = b.batch_PB_PID where b.batch_PB_batchID = "2021011901") and batch_PB_batchID = "2021011901");
 -->
 	<insert id="insertBatchPersonalInfo"  parameterType="java.util.Map">
        insert into t_personal_info
		(select REPLACE(UUID(),"-",""),
		batch_payment_Name,
		"",
		"0",
		batch_payment_PID,
		"",
		"",
		batch_payment_mobile,
		batch_payment_mobile,
		"",
		batch_payment_mobile,
		"",
		batch_payment_mobile,
		"",
		batch_payment_mobile,
		#{t_P_Company,jdbcType=VARCHAR},
		"1",
		"0.00",
		"0.00",
		"新上传",
		"vendor",
		"1",
		batch_payment_paymentbatchid,
		"是",
		#{t_P_VendorCompany,jdbcType=VARCHAR},
		"",
		batch_payment_bankcard,
		"0.00",
		"0.00",
		#{payrollDate,jdbcType=VARCHAR},
		"0.00",
		#{payrollDate,jdbcType=VARCHAR},
		#{payrollDate,jdbcType=VARCHAR},
		NOW(),
		"0",
		"",
		"system",
		NOW(),
		"system",
		NOW()
		from t_batch_debitpaymentupload
		where batch_payment_PID NOT IN (select t_P_PID from t_personal_info a JOIN t_batch_debitpaymentupload b on a.t_P_PID = b.batch_payment_PID where b.batch_payment_PID = #{batch_payment_PID,jdbcType=VARCHAR}) and batch_payment_PID = #{batch_payment_PID,jdbcType=VARCHAR})
    </insert>

<!-- 
Update t_personal_info personal status to close
UPDATE t_personal_info a JOIN t_batch_personupload b on a.t_P_PID = b.batch_PB_PID SET a.t_P_Employmentstatus = "pending" where b.batch_PB_batchID = "2021011901" 
-->
	<update id="updateBatchPersonalStatusClose" parameterType="java.util.Map">
		update t_personal_info a,t_batch_debitpaymentupload b,t_batch_debitpaymentupload_status c
 		SET a.t_P_Employmentstatus = "pending",
 		c.t_batch_paymentUploadClearStatus = "关闭状态"
		where a.t_P_PID = b.batch_payment_PID
		AND b.batch_payment_paymentbatchid = #{batch_payment_paymentbatchid,jdbcType=VARCHAR}
		AND c.t_batch_paymenetUploadStatus_batchid = #{batch_payment_paymentbatchid,jdbcType=VARCHAR}
		<if test="batch_PB_fprod !=null">
		and b.batch_payment_paymentbatchid = #{batch_payment_paymentbatchid,jdbcTypeVARCHAR}
		</if>
	</update>
	
<!-- 
Update t_personal_info personal status to open
UPDATE t_personal_info a JOIN t_batch_personupload b on a.t_P_PID = b.batch_PB_PID SET a.t_P_Employmentstatus = "pending" where b.batch_PB_batchID = "2021011901" 
-->
	<update id="updateBatchPersonalStatusOpen" parameterType="java.util.Map">
		update t_personal_info a,t_batch_debitpaymentupload b,t_batch_debitpaymentupload_status c
 		SET a.t_P_Employmentstatus = "onjob",
 		c.t_batch_paymentUploadClearStatus = "开启状态"
		where a.t_P_PID = b.batch_payment_PID
		AND b.batch_payment_batchID = #{batch_payment_batchID,jdbcType=VARCHAR}
		AND c.t_batch_paymenetUploadStatus_batchid = #{batch_payment_batchID,jdbcType=VARCHAR}
		<if test="batch_payment_paymentbatchid !=null">
		and b.batch_payment_paymentbatchid = #{batch_payment_paymentbatchid,jdbcTypeVARCHAR}
		</if>
	</update>	

<!-- 
Update t_personal_info credit, payrolldate,product_info
UPDATE t_personal_info a JOIN t_batch_personupload b on a.t_P_PID = b.batch_PB_PID SET a.t_P_CreditPrepaySalaryAmount = b.batch_credit where b.batch_PB_batchID = "2021011901";  
New-function need to check personalinfo-->
	<update id="updateBatchPersonalInfo" parameterType="java.util.Map">
		update t_personal_info a 
		JOIN t_batch_debitpaymentupload b on a.t_P_PID = b.batch_payment_PID
		SET a.t_P_SalaryBalance = b.batch_payment_amt + a.t_P_SalaryBalance,
		a.t_P_Probation = b.batch_PB_fprod,
		a.t_P_PayrollDate = b.batch_PB_payrolldate
		where b.batch_payment_paymentbatchid = #{batch_payment_paymentbatchid,jdbcType=VARCHAR}
	</update>
	
<!-- 
Update t_personal_info credit, payrolldate,product_info
UPDATE t_personal_info a JOIN t_batch_personupload b on a.t_P_PID = b.batch_PB_PID SET a.t_P_CreditPrepaySalaryAmount = b.batch_credit where b.batch_PB_batchID = "2021011901";  
-->
	<update id="updateBatchPersonalTxnClearing" parameterType="java.util.List">
		UPDATE t_transaction_his JOIN t_batch_personupload on t_transaction_his.t_P_PID_his = t_batch_personupload.batch_PB_PID SET t_transaction_his.t_Txn_PrepayClear_his = "0" 
		where t_batch_personupload.batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR} 
		<if test="batch_PB_effectDate != null" >
		and t_transaction_his.t_Txn_ PrepayDate_his greater than #{batch_PB_effectDate,jdbcType=TIMESTAMP} 
		</if>
	    <if test="batch_PB_endDate != null" >
		and t_transaction_his.t_Txn_PrepayDate_his less than #{batch_PB_endDate,jdbcType=TIMESTAMP}
		</if>
	</update>
	
<!-- 
refresh delagation 
delete from t_transaction_info where t_transaction_info.t_Txn_PrepayApplierPID in (select batch_PB_PID from t_batch_personupload where batch_PB_batchID = "2021011901")
-->	
	
	<delete id="deleteByRefreshBatchPersonalCredit" parameterType="java.lang.String">
		DELETE from t_transaction_info
		where t_transaction_info.t_Txn_PrepayApplierPID in 
		(select batch_PB_PID from t_batch_personupload where batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR})
	</delete>
</mapper>
 