<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qucai.sample.dao.PersonalInfoBatchUploadDao">

	<resultMap id="BaseResultMap" type="com.qucai.sample.entity.PersonalInfoBatchUpload">
		<result column="batch_PB_ID" property="batch_PB_ID" jdbcType="VARCHAR" />
		<result column="batch_PB_batchID" property="batch_PB_batchID" jdbcType="VARCHAR" />
		<result column="batch_PB_Name" property="batch_PB_Name" jdbcType="VARCHAR" />
		<result column="batch_PB_PID" property="batch_PB_PID" jdbcType="VARCHAR" />
		<result column="batch_PB_ProdName" property="batch_PB_ProdName" jdbcType="VARCHAR" />
		<result column="batch_PB_company" property="batch_PB_company" jdbcType="VARCHAR" />
		<result column="batch_PB_vendorcompany" property="batch_PB_vendorcompany" jdbcType="VARCHAR" />
		<result column="batch_PB_fprod" property="batch_PB_fprod" jdbcType="VARCHAR" />
		<result column="batch_PB_payrolldate" property="batch_PB_payrolldate" jdbcType="INTEGER" />
		<result column="batch_PB_creditCard" property="batch_PB_creditCard" jdbcType="VARCHAR" />
		<result column="batch_PB_mobile" property="batch_PB_mobile" jdbcType="VARCHAR" />
		<result column="batch_PB_credit" property="batch_PB_credit" jdbcType="DECIMAL" />
		<result column="batch_PB_balance" property="batch_PB_balance" jdbcType="DECIMAL" />
		<result column="batch_PB_clearCategory" property="batch_PB_clearCategory" jdbcType="VARCHAR" />
		<result column="batch_PB_effectDate" property="batch_PB_effectDate" jdbcType="TIMESTAMP" />	
		<result column="batch_PB_endDate" property="batch_PB_endDate" jdbcType="TIMESTAMP" />
		<result column="batch_PB_flag" property="batch_PB_flag" jdbcType="VARCHAR" />
		<result column="batch_PB_uploadRemark" property="batch_PB_uploadRemark" jdbcType="VARCHAR" />
		<result column="batch_creator" property="batch_creator" jdbcType="VARCHAR" />
		<result column="batch_createtime" property="batch_createtime" jdbcType="TIMESTAMP" />
	</resultMap>
	
	<sql id="Base_Column_List">
		a.batch_PB_ID,
		a.batch_PB_batchID, 
		a.batch_PB_Name, 
		a.batch_PB_PID,
		a.batch_PB_ProdName,
		a.batch_PB_company, 
		a.batch_PB_vendorcompany, 
		a.batch_PB_fprod,
		a.batch_PB_payrolldate, 
		a.batch_PB_creditCard,
		a.batch_PB_mobile,
		a.batch_PB_credit,
		a.batch_PB_balance,
		a.batch_PB_clearCategory,
		a.batch_PB_effectDate,
		a.batch_PB_endDate, 
		a.batch_PB_flag,
		a.batch_PB_uploadRemark,
		a.batch_creator,
		a.batch_createtime
	</sql>

	<insert id="insertCustomerMachineByBatch"  parameterType="java.util.List">
        insert into t_batch_personupload 
        <trim prefix="(" suffix=")" suffixOverrides=",">
		batch_PB_ID, 
		batch_PB_batchID, 
		batch_PB_Name, 
		batch_PB_PID,
		batch_PB_ProdName,
		batch_PB_company, 
		batch_PB_vendorcompany, 
		batch_PB_fprod,
		batch_PB_payrolldate, 
		batch_PB_creditCard, 
		batch_PB_mobile, 
		batch_PB_credit, 
		batch_PB_balance, 
		batch_PB_clearCategory, 
		batch_PB_effectDate, 
		batch_PB_endDate, 
		batch_PB_flag, 
		batch_PB_uploadRemark, 
		batch_creator, 
		batch_createtime
		</trim>
        values 
        <foreach collection="list" separator="," item="cell">
            (#{cell.batch_PB_ID,jdbcType=VARCHAR},
            #{cell.batch_PB_batchID,jdbcType=VARCHAR},
            #{cell.batch_PB_Name,jdbcType=VARCHAR},
            #{cell.batch_PB_PID,jdbcType=VARCHAR},
			#{cell.batch_PB_ProdName,jdbcType=VARCHAR},
            #{cell.batch_PB_company,jdbcType=VARCHAR},
            #{cell.batch_PB_vendorcompany,jdbcType=VARCHAR},
            #{cell.batch_PB_fprod,jdbcType=VARCHAR},
            #{cell.batch_PB_payrolldate,jdbcType=INTEGER},
            #{cell.batch_PB_creditCard,jdbcType=VARCHAR},
            #{cell.batch_PB_mobile,jdbcType=VARCHAR},
            #{cell.batch_PB_credit,jdbcType=DECIMAL},
            #{cell.batch_PB_balance,jdbcType=DECIMAL},
            #{cell.batch_PB_clearCategory,jdbcType=VARCHAR},
            #{cell.batch_PB_effectDate,jdbcType=TIMESTAMP},
            #{cell.batch_PB_endDate,jdbcType=TIMESTAMP},
            #{cell.batch_PB_flag,jdbcType=VARCHAR},
            #{cell.batch_PB_uploadRemark,jdbcType=VARCHAR},
            #{cell.batch_creator,jdbcType=VARCHAR},
            #{cell.batch_createtime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>
	
	<select id="SelectAllBatchList" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from t_batch_personupload a 
		where a.batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR}
		order by batch_createtime desc
	</select>

    <select id="SelectAllBatch" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from t_batch_personupload a
		GROUP BY a.batch_PB_batchID
		order by batch_createtime desc
	</select>
	
	<select id="SelectCompanyBatch" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from t_batch_personupload a
		where 1=1
		<if test="batch_PB_company != 'ALL' and batch_PB_company != null">
		and a.batch_PB_company = #{batch_PB_company,jdbcType=VARCHAR}
		</if>
		<if test="batch_PB_vendorcompany != 'ALL' and batch_PB_vendorcompany != null" >
		and a.batch_PB_vendorcompany = #{batch_PB_vendorcompany,jdbcType=VARCHAR}
		</if>
        GROUP BY a.batch_PB_batchID
		order by batch_createtime desc
	</select>

<!--  delete batch -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from t_batch_personupload
		where batch_PB_batchID = #{t_batch_perslUploadStatus_id,jdbcType=VARCHAR}
	</delete>


	<select id="duplicateMobileChkTmanager" resultMap="BaseResultMap">
		 select
		 <include refid="Base_Column_List" />
		 from t_batch_personupload a where a.batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR}
		 and a.batch_PB_mobile not in 
		 ( select mobile from t_manager where t_manager.telephone in ( select batch_PB_PID from t_batch_personupload where batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR}) )
	</select>
	
	<select id="duplicateMobileChkTperson" resultMap="BaseResultMap">
	     select
		 <include refid="Base_Column_List" />
		 from t_batch_personupload a where a.batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR}
		 and a.batch_PB_mobile not in 
		 ( select t_P_Mobil from t_personal_info where t_personal_info.t_P_PID in ( select batch_PB_PID from t_batch_personupload where batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR}))
	</select>

	<select id="checkDuplicateBatchUploadMobil" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
         FROM t_batch_personupload a where a.batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR}
         GROUP BY a.batch_PB_mobile HAVING COUNT(1) > 1
	</select>
<!-- 
Find the duplicated personal ID number with new upload sheet
SELECT * FROM t_batch_personupload where batch_PB_PID in (SELECT batch_PB_PID FROM (SELECT batch_PB_PID, COUNT(batch_PB_PID) AS ct FROM t_batch_personupload where batch_PB_batchID = "2020120902" GROUP BY batch_PB_PID ) AS nt WHERE nt.ct>1); 查看上传新增人员身份证是否与已存在重复
-->
	<select id="duplicatePIDChk" resultMap="BaseResultMap">
		 select
		 <include refid="Base_Column_List" />
		 from t_batch_personupload a where a.batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR}
		 and a.batch_PB_PID not in 
		 ( select telephone from t_manager where t_manager.mobile in ( select batch_PB_mobile from t_batch_personupload where batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR}) )
	</select>
	
	<select id="checkDuplicateBatchUploadPID" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
         FROM t_batch_personupload a where a.batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR}
         GROUP BY a.batch_PB_PID HAVING COUNT(1) > 1
	</select>

<!-- 
 Find the duplicated personal ID number with new upload sheet
SELECT * FROM t_batch_personupload where batch_PB_creditCard in (SELECT batch_PB_creditCard FROM (SELECT batch_PB_creditCard, COUNT(batch_PB_creditCard) AS ct FROM t_batch_personupload where batch_PB_batchID = "2020120902" GROUP BY batch_PB_creditCard) AS nt WHERE nt.ct>1) 查看上传新增人员银行卡号是否与已存在重复
-->
	<select id="duplicateDebitCardChk" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_batch_personupload a where a.batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR}
		and a.batch_PB_creditCard in (SELECT batch_PB_creditCard FROM (SELECT batch_PB_creditCard, COUNT(batch_PB_creditCard) AS ct FROM t_batch_personupload where batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR} GROUP BY batch_PB_creditCard) AS nt WHERE nt.ct>1)
	</select>

	<select id="checkDuplicateBatchUploadDebitCard" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
         FROM t_batch_personupload a where a.batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR}
         GROUP BY a.batch_PB_creditCard HAVING COUNT(1) > 1
	</select>
 	
<!-- 
insert new personal info into manager table
insert into t_manager ( select REPLACE(UUID(),"-",""),batch_mobile,substring(MD5(RAND()),1,6),batch_Name,"美团买菜",batch_mobile,batch_PB_PID,"test@test.com","","1",NOW(),NOW() from t_batch_personupload where batch_PB_PID NOT IN (select t_P_PID from t_personal_info a JOIN t_batch_personupload b on a.t_P_PID = b.batch_PB_PID where b.batch_PB_batchID = "2020120902") and batch_PB_batchID = "2020120902");
 -->
	<insert id="insertManagerInfo"  parameterType="java.util.Map">
        insert into t_manager 
        (select REPLACE(UUID(),"-",""),
        batch_PB_mobile,
        substring(MD5(RAND()),1,6),
        batch_PB_Name,
        batch_PB_company,
        batch_PB_mobile,
        batch_PB_PID,
        "test@test.com",
        "",
        "1",
        NOW(),
        NOW() from t_batch_personupload
        where batch_PB_PID NOT IN (select t_P_PID from t_personal_info a JOIN t_batch_personupload b on a.t_P_PID = b.batch_PB_PID where b.batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR} ) and batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR} )
    </insert>
<!-- 
insert role manager info into tr_manager_role table
insert into tr_manager_role ( select id, "36e49be8d13e4a2081968148176a082c" from t_manager where telephone in (select batch_PB_PID from t_batch_personupload where batch_PB_PID NOT IN (select t_P_PID from t_personal_info a JOIN t_batch_personupload b on a.t_P_PID = b.batch_PB_PID where b.batch_PB_batchID = "2021011901") and batch_PB_batchID = "2021011901"));
 -->    
 	<insert id="insertRoleTrManagerInfoTxn"  parameterType="java.util.Map">
        insert into tr_manager_role 
         ( select id, 
         "36e49be8d13e4a2081968148176a082c" 
         from t_manager 
         where telephone in
         (select batch_PB_PID from t_batch_personupload where batch_PB_PID NOT IN (select t_P_PID from t_personal_info a JOIN t_batch_personupload b on a.t_P_PID = b.batch_PB_PID where b.batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR}) and batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR}));
    </insert>
<!-- 
insert role manager info into tr_manager_role table
insert into tr_manager_role ( select id, "a4ce0bbea6404a4ea4cab9b95ef53fa5" from t_manager where telephone in (select batch_PB_PID from t_batch_personupload where batch_PB_PID NOT IN (select t_P_PID from t_personal_info a JOIN t_batch_personupload b on a.t_P_PID = b.batch_PB_PID where b.batch_PB_batchID = "2021011901") and batch_PB_batchID = "2021011901"));
 -->    
 	<insert id="insertRoleTrManagerInfoTxnview"  parameterType="java.util.Map">
        insert into tr_manager_role 
         ( select id, 
         "a4ce0bbea6404a4ea4cab9b95ef53fa5" 
         from t_manager 
         where telephone in
         (select batch_PB_PID from t_batch_personupload where batch_PB_PID NOT IN (select t_P_PID from t_personal_info a JOIN t_batch_personupload b on a.t_P_PID = b.batch_PB_PID where b.batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR}) and batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR}));
    </insert>
    
<!-- 
insert role manager info into tr_manager_role table
insert into t_personal_info (select REPLACE(UUID(),"-",""),batch_Name,"","0",batch_PB_PID,"","",batch_mobile,batch_mobile,"",batch_mobile,"",batch_mobile,"",batch_mobile,"三耀买菜","1",batch_credit,batch_credit,"onjob","vendor","1",batch_creator,"是","美团买菜","",batch_creditcard,batch_credit,batch_credit,"15",batch_credit,"15","15",NOW(),"0","","system",NOW(),"system",NOW() from t_batch_personupload where batch_PB_PID NOT IN (select t_P_PID from t_personal_info a JOIN t_batch_personupload b on a.t_P_PID = b.batch_PB_PID where b.batch_PB_batchID = "2021011901") and batch_PB_batchID = "2021011901");
 -->    
 	<insert id="insertBatchPersonalInfo"  parameterType="java.util.Map">
        insert into t_personal_info 
		(select REPLACE(UUID(),"-",""),
		batch_PB_Name,
		"",
		"0",
		batch_PB_PID,
		"",
		"",
		batch_PB_mobile,
		batch_PB_mobile,
		"",
		batch_PB_mobile,
		"",
		batch_PB_mobile,
		"",
		batch_PB_mobile,
		#{t_P_Company,jdbcType=VARCHAR},
		"1",
		batch_PB_credit,
		batch_PB_credit,
		"pending",
		"vendor",
		"1",
		batch_PB_fprod,
		"是",
		#{t_P_VendorCompany,jdbcType=VARCHAR},
		"",
		batch_PB_creditCard,
		batch_PB_credit,
		batch_PB_credit,
		#{payrollDate,jdbcType=VARCHAR},
		batch_PB_credit,
		#{payrollDate,jdbcType=VARCHAR},
		#{payrollDate,jdbcType=VARCHAR},
		NOW(),
		"0",
		"",
		"system",
		NOW(),
		"system",
		NOW() 
		from t_batch_personupload
		where batch_PB_PID NOT IN (select t_P_PID from t_personal_info a JOIN t_batch_personupload b on a.t_P_PID = b.batch_PB_PID where b.batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR}) and batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR})
    </insert>

<!-- 
Update t_personal_info personal status to close
UPDATE t_personal_info a JOIN t_batch_personupload b on a.t_P_PID = b.batch_PB_PID SET a.t_P_Employmentstatus = "pending" where b.batch_PB_batchID = "2021011901" 
-->
	<update id="updateBatchPersonalStatusClose" parameterType="java.util.Map">
		update t_personal_info a,t_batch_personupload b,t_batch_personupload_status c
 		SET a.t_P_Employmentstatus = "pending",
 		c.t_batch_comment = "关闭状态"
		where a.t_P_PID = b.batch_PB_PID 
		AND b.batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR} 
		AND c.t_batch_perslUploadStatus_batchid = #{batch_PB_batchID,jdbcType=VARCHAR}
		<if test="batch_PB_fprod !=null">
		and b.batch_PB_fprod = #{batch_PB_fprod,jdbcTypeVARCHAR}
		</if>
	</update>
	
<!-- 
Update t_personal_info personal status to open
UPDATE t_personal_info a JOIN t_batch_personupload b on a.t_P_PID = b.batch_PB_PID SET a.t_P_Employmentstatus = "pending" where b.batch_PB_batchID = "2021011901" 
-->
	<update id="updateBatchPersonalStatusOpen" parameterType="java.util.Map">
		update t_personal_info a,t_batch_personupload b,t_batch_personupload_status c
 		SET a.t_P_Employmentstatus = "onjob",
 		c.t_batch_comment = "开启状态"
		where a.t_P_PID = b.batch_PB_PID 
		AND b.batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR} 
		AND c.t_batch_perslUploadStatus_batchid = #{batch_PB_batchID,jdbcType=VARCHAR}
		<if test="batch_PB_fprod !=null">
		and b.batch_PB_fprod = #{batch_PB_fprod,jdbcTypeVARCHAR}
		</if>
	</update>	

<!-- 
Update t_personal_info credit, payrolldate,product_info
UPDATE t_personal_info a JOIN t_batch_personupload b on a.t_P_PID = b.batch_PB_PID SET a.t_P_CreditPrepaySalaryAmount = b.batch_credit where b.batch_PB_batchID = "2021011901";  
-->
	<update id="updateBatchPersonalInfo" parameterType="java.util.Map">
		update t_personal_info a 
		JOIN t_batch_personupload b on a.t_P_PID = b.batch_PB_PID 
		SET a.t_P_CreditPrepaySalaryAmount = b.batch_PB_credit,
		a.t_P_Probation = b.batch_PB_fprod,
		a.t_P_PayrollDate = b.batch_PB_payrolldate
		where b.batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR}
	</update>
	
<!-- 
Update t_personal_info credit, payrolldate,product_info
UPDATE t_personal_info a JOIN t_batch_personupload b on a.t_P_PID = b.batch_PB_PID SET a.t_P_CreditPrepaySalaryAmount = b.batch_credit where b.batch_PB_batchID = "2021011901";  
-->
	<update id="updateBatchPersonalTxnClearing" parameterType="java.util.List">
		UPDATE t_transaction_his JOIN t_batch_personupload on t_transaction_his.t_P_PID_his = t_batch_personupload.batch_PB_PID SET t_transaction_his.t_Txn_PrepayClear_his = "0" 
		where t_batch_personupload.batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR} 
		<if test="batch_PB_effectDate != null" >
		and t_transaction_his.t_Txn_ PrepayDate_his greater than #{batch_PB_effectDate,jdbcType=TIMESTAMP} 
		</if>
	    <if test="batch_PB_endDate != null" >
		and t_transaction_his.t_Txn_PrepayDate_his less than #{batch_PB_endDate,jdbcType=TIMESTAMP}
		</if>
	</update>
	
<!-- 
refresh delagation 
delete from t_transaction_info where t_transaction_info.t_Txn_PrepayApplierPID in (select batch_PB_PID from t_batch_personupload where batch_PB_batchID = "2021011901")
-->	
	
	<delete id="deleteByRefreshBatchPersonalCredit" parameterType="java.lang.String">
		DELETE from t_transaction_info
		where t_transaction_info.t_Txn_PrepayApplierPID in 
		(select batch_PB_PID from t_batch_personupload where batch_PB_batchID = #{batch_PB_batchID,jdbcType=VARCHAR})
	</delete>
</mapper>
 